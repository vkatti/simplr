% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getStats.R
\name{getStats}
\alias{getStats}
\title{getStats}
\usage{
getStats(df, limit = getOption("simplr.getStats.limit", default = 5L))
}
\arguments{
\item{df}{data.frame or tibble to get the stats for.}

\item{limit}{integer. If number of unique values in a variable/column does not exceed this number, then display the unique values as pipe-separated value. Default 5, can be set in \code{options} as 'simplr.getStats.limit'.}
}
\value{
data.frame
}
\description{
Get quick stats for a data.frame or tibble with some metrics not displayed with \code{str()} or \code{summary()}.
Use this function mostly for interactive use.
}
\examples{
getStats(airquality)
#>          numMissing typeCol       range numUnique uniqueVals
#>  Ozone           37 integer    1 to 168        68          -
#>  Solar.R          7 integer    7 to 334       118          -
#>  Wind             0 numeric 1.7 to 20.7        31          -
#>  Temp             0 integer    56 to 97        40          -
#>  Month            0 integer      5 to 9         5          -
#>  Day              0 integer     1 to 31        31          -

getStats(as.data.frame(datasets::HairEyeColor))
#>       numMissing typeCol   range numUnique                   uniqueVals
#>  Hair          0  factor       -         4  Black | Brown | Red | Blond
#>  Eye           0  factor       -         4 Brown | Blue | Hazel | Green
#>  Sex           0  factor       -         2                Male | Female
#>  Freq          0 numeric 2 to 66        22                            -

getStats(as.data.frame(datasets::Titanic))
#>           numMissing typeCol    range numUnique             uniqueVals
#>  Class             0  factor        -         4 1st | 2nd | 3rd | Crew
#>  Sex               0  factor        -         2          Male | Female
#>  Age               0  factor        -         2          Child | Adult
#>  Survived          0  factor        -         2               No | Yes
#>  Freq              0 numeric 0 to 670        22                      -


}
